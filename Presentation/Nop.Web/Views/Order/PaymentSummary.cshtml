@model CustomerOrderListModel
@inject IPictureService pictureService
@inject IOrderService orderService

@using Nop.Core;
@using Nop.Services.Media;
@using Nop.Services.Orders;
@using Nop.Web.Framework.UI;

@{
    //other variables
    var random = CommonHelper.GenerateRandomInteger();
    var clientId = "picture" + random;
    var picture = random;
    
}

@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-order-list-page");
}
@section left
{
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.PaymentSummary})
}

<html>
    

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,  initial-scale=1.0" />
    <style type="text/css">
        .tg  {border-collapse:collapse;border-spacing:0;}
        .tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:12px;
        overflow:hidden;padding:10px 5px;word-break:normal;}
        .tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:12px;
        font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
        .tg .tg-0lax{text-align:left;vertical-align:top}
    </style>
    
    
</head>
<body>
<form id="fileUploadForm" asp-controller="Order"  asp-action="paymentSummary" method="post" enctype="multipart/form-data">
    <div class="content-header clearfix">
    <div class="page account-page order-list-page">
    
    <script src="@Url.Content("~/lib_npm/jquery/jquery.min.js")"></script>
    <script src="~/lib_npm/jquery/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="~/lib_npm/fine-uploader/fine-uploader/fine-uploader.min.css" />
    <script asp-exclude-from-bundle="false" src="~/lib_npm/fine-uploader/jquery.fine-uploader/jquery.fine-uploader.min.js" ></script>
    <div class="page-title">
        <h1>@T("Account.PaymentSummary")</h1>
    </div>
    <div class="page-body">
    

        
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                @*<form asp-route="CustomerOrders" method="post">*@
                    @{
                        var canRetryRecurringOrders = Model.RecurringOrders.Any(recurring => recurring.CanRetryLastPayment);
                    }
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col />
                                <col />
                                <col />
                                <col />
                                <col />
                                <col />
                                @if (canRetryRecurringOrders)
                                {
                                    <col /> }
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="start-date">
                                        @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                    </th>
                                    <th class="cycle-info">
                                        @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                    </th>
                                    <th class="next-payment">
                                        @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                    </th>
                                    <th class="total-cycles">
                                        @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                    </th>
                                    <th class="cycles-remaining">
                                        @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                    </th>
                                    <th class="initial-order">
                                        @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                    </th>
                                    @if (canRetryRecurringOrders)
                                    {
                                        <th class="retry">
                                            @T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")
                                        </th>
                                    }
                                    <th class="cancel">
                                        @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.RecurringOrders)
                                {
                                    <tr>
                                        <td class="start-date">
                                            @item.StartDate
                                        </td>
                                        <td class="cycle-info">
                                            @item.CycleInfo
                                        </td>
                                        <td class="next-payment">
                                            @item.NextPayment
                                        </td>
                                        <td class="total-cycles">
                                            @item.TotalCycles
                                        </td>
                                        <td class="cycles-remaining">
                                            @item.CyclesRemaining
                                        </td>
                                        <td class="initial-order">
                                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderNumber)</a>
                                        </td>
                                        @if (canRetryRecurringOrders)
                                        {
                                            <td class="retry">
                                                @if (item.CanRetryLastPayment)
                                                {
                                                    <button type="submit" name="retryLastPayment_@(item.Id)" class="button-2 retry-recurring-order-button">@T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")</button>
                                                }
                                            </td>
                                        }
                                        <td class="cancel">
                                            @if (item.CanCancel)
                                            {
                                                <button type="submit" name="cancelRecurringPayment@(item.Id)" class="button-2 cancel-recurring-order-button">@T("Account.CustomerOrders.RecurringOrders.Cancel")</button>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                
            </div>
                if (Model.RecurringPaymentErrors.Any())
                {
                    <div class="message-error">
                        <ul>
                            @foreach (var error in Model.RecurringPaymentErrors)
                            {
                                <li>@error</li>
                            }
                        </ul>
                    </div>
                    }
                }

        @if (Model.Orders.Count > 0)
        {
            <div class="order-list" id="order-item-list" >

                @foreach (var item in Model.Orders)
                {
                    <div class="section order-item" id="order-list-item">
                        <div class="title">
                            <input type="hidden" name="Orders.Index" value="@item.Id" />
                            <input type="hidden" name="Orders[@item.Id].CustomOrderNumber" value="@item.CustomOrderNumber" />
                            <strong>@T("Account.CustomerOrders.OrderNumber"): @item.CustomOrderNumber</strong>
                        </div>
                        <ul class="info">
                            
                            <li><strong>@T("Account.CustomerOrders.OrderStatus"): </strong><span class="order-status">@item.OrderStatusEnum.ToString().ToLowerInvariant()</span></li>
                            <li><strong>@T("Account.CustomerOrders.OrderDate"):</strong><span class="order-date">@item.CreatedOn.ToString()</span></li>
                            <li><strong>@T("Account.CustomerOrders.OrderTotal"): </strong><span class="order-total">@item.OrderTotal</span></li>
                            <li>
                             <div class="upload-picture-block">
                                    <div class="picture-container">
                                        <div class="uploaded-image" ><span class="image-preview-input-title"></span><strong>@T("Account.CustomerOrders.ImageUpload"): </strong>
                                             
                                            <input type="hidden" name="Orders[@item.Id].PaymentImageUrl" value="@item.PaymentImageUrl" />
                                            <div style="text-align: left;"><img src="~/images/order_payment_proof/@(await orderService.GetPicturesByOrderIdAsync(@item.CustomOrderNumber))" 
                                                                    class="w3-sepia-min"  
																    height="80" width="80" /></div>
                                                                     
                                        </div>
                                    </div>
                                    <div class="upload-button-container">
		                                <div class="form-control custom-file-input form-file-text">
                                            <span class="glyphicon glyphicon-folder-open"></span><strong>Choose File :</strong>
                    
                                            <div style="text-align: left;"><input type="file" name="Orders[@item.Id].PaymentImagePhoto" id="fileUpload" class="custom-file-input" accept="image/png, image/jpeg, image/gif" ></div>  
                                        </div> 
                                        <div class="col-md-9">
                                            <span class="shepherd-cancel-icon" ></span><span class="image-preview-input-title">Cancel Order</span>
                                            @*<span>@T("account.customerorders.ordercancellation")</span>*@
                                            <img src="@Url.Content("~/css/admin/images/delete-order.png")" style="width:6%" onclick="CancelOrder(@item.CustomOrderNumber)">
                                        </div>
                                        
                                    </div>
                              </div>
                              </li>
                        </ul>
                        @*<div class="buttons">
                            @if (order.IsReturnRequestAllowed)
                            {
                                <button type="button" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')">@T("Account.CustomerOrders.ReturnItems")</button>
                            }
                            <button type="button" class="button-2 order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')">@T("Account.CustomerOrders.OrderDetails")</button>
                        </div>*@
                    </div>
                }
                @*<button type="submit" class="btn btn-success" id="btnUpload"  >@T("Order.Payment.Pictures.Upload")</button>*@
              </div>
              <div class="order-list" id="order-item-list" >                      
                    <input type="submit"  class="btn btn-primary"  style="width:100px" value=@T("Order.Payment.Pictures.Upload") onclick="Uploadfile()"/>
              </div>
        }
        else
        {
            <div class="no-data">
                @T("Account.CustomerOrders.NoOrders")
            </div>
        }
        
    </div>
  </div>
  </div>
    
</form>

<script>
  function CancelOrder(OrderIdforCancellation) {
        Swal.fire({
            title: 'Are you sure to cancel order#: ' + OrderIdforCancellation,
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, Cancel Order!'
        }).then((result) => {
            if (result.isConfirmed) {
                var postData = {
                    orderId: OrderIdforCancellation
                };
                addAntiForgeryToken(postData);
            
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("CustomerCancelOrder","Order")", 
                    data: postData,
                    dataType: "json",
                    success: function (data, textStatus, jqXHR) {
                         if (!data.cancelOk) {
                              alert("Cannot do cancellation for order");
                         }
                         else{
                              alert("Order Cancellation Successful");
                              return true;
                         }

                    },
                    error: function (jqXHR, textStatus, errorThrown){
                        //alert('Cannot do cancellation for order - cancellation error');
                        return false;
                    },
                    complete: function (jqXHR, textStatus) {
                                                       
                      }
                    
                }); //end of ajax
                        

            } // end of if  
            return false;   // else if result is not confirmed
            
        });
   }
</script>


<script type="text/javascript">
 
   function Uploadfile(){
                     
               var orderData = {
                    orderList : $("#order-item-list")
                };
                $.ajax({
                    url:  '@Url.Action("paymentSummary","Order")',
                    type: 'POST',
                    data:  orderData 
                });
                 
   }
 </script>

</body>
</html>